name: Deploy to Railway

on:
  push:
    branches:
      - main
    paths:
      - 'mcp-gateway/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'mcp-gateway/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18.20.5'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mcp-gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./mcp-gateway/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test

      - name: Build application
        run: npm run build

  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: |
          cd mcp-gateway
          railway up --service mcp-gateway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Check deployment status
        run: |
          cd mcp-gateway
          railway status
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  preview:
    name: Create Preview Environment
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Create preview environment
        run: |
          cd mcp-gateway
          railway up --service mcp-gateway --environment pr-${{ github.event.pull_request.number }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const previewUrl = `https://mcp-gateway-pr-${prNumber}.up.railway.app`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview environment deployed!\n\nPreview URL: ${previewUrl}\nHealth Check: ${previewUrl}/health`
            });

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mcp-gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-gateway
          file: ./mcp-gateway/Dockerfile
          push: false
          tags: mcp-gateway:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_VERSION=18.20.5
            ALPINE_VERSION=3.20

      - name: Test Docker image
        run: |
          docker run --rm -d --name mcp-gateway-test \
            -p 3333:3333 \
            -e NODE_ENV=production \
            -e PORT=3333 \
            mcp-gateway:test
          
          # Wait for service to start
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:3333/health || exit 1
          
          # Stop container
          docker stop mcp-gateway-test